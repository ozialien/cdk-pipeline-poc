{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "Product catalog - OpenAPI 3.0.3",
    "description": "This is a sample API Specification for a fictitious product catalog management system.",
    "termsOfService": "https://www.matson.com/terms/",
    "contact": {
      "name": "Amit Kapoor",
      "email": "akapoor@matson.com",
      "url": "https://www.matson.com"
    },
    "license": {
      "name": "Matson Proprietary",
      "url": "https://www.matson.com"
    }
  },
  "tags": [
    {
      "name": "ProductCatalog",
      "description": "Managing the product catalog",
      "externalDocs": {
        "description": "All the amazing features about the product catalog capabilities",
        "url": "https://swagger.io"
      }
    },
    {
      "name": "TokenAuth",
      "description": "OATH2 Token Auth",
      "externalDocs": {
        "description": "OAuth Token Auth",
        "url": "https://swagger.io/docs/specification/v3_0/authentication/oauth2/"
      }
    }
  ],
  "paths": {
    "/products": {
      "post": {
        "tags": [
          "ProductCatalog"
        ],
        "summary": "New product to catalog",
        "description": "Add a new product to the catalog",
        "operationId": "addProduct",
        "requestBody": {
          "$ref": "#/components/requestBodies/ProductBody"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/SuccessfullyCreated"
          },
          "400": {
            "$ref": "#/components/responses/GETBadRequest"
          },
          "401": {
            "$ref": "#/components/responses/UnAuthorized"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "ProductTokenAuth": [
              "catalog/read"
            ]
          },
          {
            "ProductAuth": [
              "catalog/update"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "ProductCatalog"
        ],
        "summary": "Lists products from the catalog",
        "description": "Lists products from the catalog",
        "operationId": "listProducts",
        "parameters": [
          {
            "$ref": "#/components/parameters/ProductFilter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/SuccessfullProductResults"
          },
          "401": {
            "$ref": "#/components/responses/UnAuthorized"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "ProductTokenAuth": [
              "catalog/read"
            ]
          },
          {
            "ProductAuth": [
              "catalog/read"
            ]
          }
        ]
      }
    },
    "/token": {
      "post": {
        "tags": [
          "TokenAuth"
        ],
        "description": "Get a token, which will subsequently be used to invoke the service APIs",
        "operationId": "getToken",
        "summary": "get oauth2 token",
        "parameters": [
          {
            "name": "grant_type",
            "in": "query",
            "description": "The Oauth2 grant type. client_credentials is the only supported grant type",
            "required": true,
            "schema": {
              "type": "string",
              "default": "client_credentials",
              "enum": [
                "client_credentials"
              ]
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "All scopes for the resource to be accessed by the client. use space as a separator for multiple scopes",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 255
            }
          },
          {
            "name": "client_id",
            "in": "query",
            "description": "Unique identifier for the client",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 255
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/TokenAuthSuccess"
          },
          "401": {
            "$ref": "#/components/responses/TokenAuthUnauthorized"
          },
          "403": {
            "$ref": "#/components/responses/TokenAuthForbidden"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "ProductTokenAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "headers": {
      "Location": {
        "description": "The URI of the created reservedConcurrency",
        "example": "/Product/1059",
        "schema": {
          "oneOf": [
            {
              "type": "string",
              "maxLength": 255,
              "format": "uri"
            },
            {
              "type": "string",
              "maxLength": 255,
              "pattern": "^/[^ ]*$"
            }
          ],
          "maxLength": 255
        }
      },
      "Retry-After": {
        "description": "Indicates how long the client should wait before making a follow-up request.",
        "schema": {
          "type": "string",
          "maxLength": 100,
          "format": "int32"
        }
      },
      "Access-Control-Allow-Origin": {
        "description": "CORS header to allow access from specific origins",
        "schema": {
          "type": "string",
          "example": "*",
          "maxLength": 255
        }
      },
      "X-RateLimit-Limit": {
        "schema": {
          "type": "integer",
          "description": "Request limit per hour.",
          "format": "int32",
          "minimum": 1,
          "maximum": 100,
          "default": 20
        }
      },
      "X-RateLimit-Remaining": {
        "schema": {
          "type": "integer",
          "description": "The number of requests left for the time window.",
          "format": "int32",
          "minimum": 1,
          "maximum": 100,
          "default": 20
        }
      },
      "X-RateLimit-Reset": {
        "schema": {
          "type": "string",
          "description": "The UTC date/time at which the current rate limit window resets.",
          "format": "date-time",
          "maxLength": 100,
          "default": "2092-04-23T18:25:43.511Z"
        }
      }
    },
    "parameters": {
      "PagingOffset": {
        "name": "offset",
        "in": "query",
        "description": "Skip these number of records from the head of the results. If unspecified returns the results from the beginning.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "maximum": 92233720336854780000,
          "example": 100
        }
      },
      "PagingLimit": {
        "name": "limit",
        "in": "query",
        "description": "limit the number of returned records in the result. Default 100 records. Max allowed 500.",
        "required": false,
        "schema": {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "maximum": 2147483647,
          "example": 150
        }
      },
      "Sort": {
        "name": "sort",
        "in": "query",
        "description": "the attributes to sort the returned results by. Default sort by launchDate",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/Sort"
        }
      },
      "ProductFilter": {
        "name": "filter",
        "in": "query",
        "description": "Fiql based query criteria based on the following query attributes - productCode, productName, launchDate. If none specified, the products will be be returned. Ref: https://datatracker.ietf.org/doc/html/draft-nottingham-atompub-fiql-00",
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/FIQL"
        },
        "examples": {
          "singleAttribute": {
            "summary": "simple query criteria",
            "description": "launchDate >= 2024-01-01",
            "value": "launchDate=ge=2024-01-01"
          },
          "multiAttributes": {
            "summary": "criterial using multiple attributes",
            "description": "launchDate >= 2024-01-01 and productCode = 'Remington4907'",
            "value": "launchDate=ge=2024-01-01;productCode==Remington4907"
          }
        }
      }
    },
    "requestBodies": {
      "ProductBody": {
        "description": "The product catalog attributes should be submitted in the body",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Product"
            },
            "examples": {
              "SimpleProduct": {
                "summary": "Creating a simple product falling in 2 categories",
                "value": {
                  "productName": "Electric Shaver",
                  "productDescription": "10k rpm rotor",
                  "productCategory": [
                    "electronics",
                    "household"
                  ],
                  "launchDate": "2024-01-01"
                }
              }
            }
          }
        }
      }
    },
    "responses": {
      "TokenAuthSuccess": {
        "description": "token generation successful",
        "headers": {
          "Retry-After": {
            "$ref": "#/components/headers/Retry-After"
          },
          "Access-Control-Allow-Origin": {
            "$ref": "#/components/headers/Access-Control-Allow-Origin"
          },
          "X-RateLimit-Limit": {
            "$ref": "#/components/headers/X-RateLimit-Limit"
          },
          "X-RateLimit-Remaining": {
            "$ref": "#/components/headers/X-RateLimit-Remaining"
          },
          "X-RateLimit-Reset": {
            "$ref": "#/components/headers/X-RateLimit-Reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Token"
            },
            "examples": {
              "Success": {
                "value": {
                  "access_token": "eyJraWQiOiJJZnM4M0IySTNhQ0hlUFJQbGJ3TzVxclhJbjhQMTdUNGFCd0RNdlNCeDdrPSIsImFsZyI6IlJTMjU2In",
                  "expires_in": 3600,
                  "token_type": "Bearer"
                }
              }
            }
          }
        }
      },
      "TokenAuthUnauthorized": {
        "description": "Unauthorized",
        "headers": {
          "Access-Control-Allow-Origin": {
            "$ref": "#/components/headers/Access-Control-Allow-Origin"
          },
          "X-RateLimit-Limit": {
            "$ref": "#/components/headers/X-RateLimit-Limit"
          },
          "X-RateLimit-Remaining": {
            "$ref": "#/components/headers/X-RateLimit-Remaining"
          },
          "X-RateLimit-Reset": {
            "$ref": "#/components/headers/X-RateLimit-Reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "examples": {
              "Authentication Failed": {
                "value": {
                  "traceId": "afpjs-829374-askdfllnc",
                  "error": {
                    "code": "AuthenticationFailed",
                    "message": "Invalid client credentials"
                  },
                  "details": [],
                  "timestamp": "2020-12-14T01:14:44.15Z"
                }
              }
            }
          }
        }
      },
      "TokenAuthForbidden": {
        "description": "Forbidden",
        "headers": {
          "Access-Control-Allow-Origin": {
            "$ref": "#/components/headers/Access-Control-Allow-Origin"
          },
          "X-RateLimit-Limit": {
            "$ref": "#/components/headers/X-RateLimit-Limit"
          },
          "X-RateLimit-Remaining": {
            "$ref": "#/components/headers/X-RateLimit-Remaining"
          },
          "X-RateLimit-Reset": {
            "$ref": "#/components/headers/X-RateLimit-Reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "examples": {
              "InvalidScope": {
                "value": {
                  "traceId": "afpjs-829374-askdfllnc",
                  "error": {
                    "code": "InvalidScope"
                  },
                  "message": "Either the client supplied an invalid scope or the client does not have the permission for the requested scope",
                  "details": [],
                  "timestamp": "2020-12-14T01:14:44.15Z"
                }
              }
            }
          }
        }
      },
      "SuccessfullProductResults": {
        "description": "successfully returned records",
        "headers": {
          "Access-Control-Allow-Origin": {
            "$ref": "#/components/headers/Access-Control-Allow-Origin"
          },
          "X-RateLimit-Limit": {
            "$ref": "#/components/headers/X-RateLimit-Limit"
          },
          "X-RateLimit-Remaining": {
            "$ref": "#/components/headers/X-RateLimit-Remaining"
          },
          "X-RateLimit-Reset": {
            "$ref": "#/components/headers/X-RateLimit-Reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProductSearchResult"
            },
            "examples": {
              "SimpleResult": {
                "summary": "Simple example",
                "value": {
                  "metadata": {
                    "message": "Success",
                    "count": 2,
                    "offset": 0,
                    "limit": 100
                  },
                  "data": [
                    {
                      "productId": 1009,
                      "productName": "Dusting Electric Shaver",
                      "productDescription": "product one description",
                      "productCategory": [
                        "electronics",
                        "household"
                      ],
                      "launchDate": "2023-01-01"
                    },
                    {
                      "productId": 1010,
                      "productName": "EOS Lip guard",
                      "productDescription": "Non-GMO/Organic",
                      "productCategory": [
                        "Personal care"
                      ],
                      "launchDate": "2024-02-01"
                    }
                  ]
                }
              },
              "InvalidLimit": {
                "summary": "response example when client asks for an out of range limit",
                "value": {
                  "metadata": {
                    "message": "limit greater than 500 not allowed, showing top 500 results only",
                    "count": 1500,
                    "offset": 0,
                    "limit": 500
                  },
                  "data": [
                    {
                      "productId": 1009,
                      "...": "..."
                    },
                    {
                      "...": "..."
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "SuccessfullyCreated": {
        "description": "Successfully added the product to catalog",
        "headers": {
          "Location": {
            "$ref": "#/components/headers/Location"
          },
          "Access-Control-Allow-Origin": {
            "$ref": "#/components/headers/Access-Control-Allow-Origin"
          },
          "X-RateLimit-Limit": {
            "$ref": "#/components/headers/X-RateLimit-Limit"
          },
          "X-RateLimit-Remaining": {
            "$ref": "#/components/headers/X-RateLimit-Remaining"
          },
          "X-RateLimit-Reset": {
            "$ref": "#/components/headers/X-RateLimit-Reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {}
          }
        }
      },
      "UnAuthorized": {
        "description": "Unauthorized",
        "headers": {
          "Access-Control-Allow-Origin": {
            "$ref": "#/components/headers/Access-Control-Allow-Origin"
          },
          "X-RateLimit-Limit": {
            "$ref": "#/components/headers/X-RateLimit-Limit"
          },
          "X-RateLimit-Remaining": {
            "$ref": "#/components/headers/X-RateLimit-Remaining"
          },
          "X-RateLimit-Reset": {
            "$ref": "#/components/headers/X-RateLimit-Reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "TooManyRequests": {
        "description": "Too Many Requests",
        "headers": {
          "Retry-After": {
            "$ref": "#/components/headers/Retry-After"
          },
          "Access-Control-Allow-Origin": {
            "$ref": "#/components/headers/Access-Control-Allow-Origin"
          },
          "X-RateLimit-Limit": {
            "$ref": "#/components/headers/X-RateLimit-Limit"
          },
          "X-RateLimit-Remaining": {
            "$ref": "#/components/headers/X-RateLimit-Remaining"
          },
          "X-RateLimit-Reset": {
            "$ref": "#/components/headers/X-RateLimit-Reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal Server Error",
        "headers": {
          "Access-Control-Allow-Origin": {
            "$ref": "#/components/headers/Access-Control-Allow-Origin"
          },
          "X-RateLimit-Limit": {
            "$ref": "#/components/headers/X-RateLimit-Limit"
          },
          "X-RateLimit-Remaining": {
            "$ref": "#/components/headers/X-RateLimit-Remaining"
          },
          "X-RateLimit-Reset": {
            "$ref": "#/components/headers/X-RateLimit-Reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      },
      "GETBadRequest": {
        "description": "Invalid input",
        "headers": {
          "Access-Control-Allow-Origin": {
            "$ref": "#/components/headers/Access-Control-Allow-Origin"
          },
          "X-RateLimit-Limit": {
            "$ref": "#/components/headers/X-RateLimit-Limit"
          },
          "X-RateLimit-Remaining": {
            "$ref": "#/components/headers/X-RateLimit-Remaining"
          },
          "X-RateLimit-Reset": {
            "$ref": "#/components/headers/X-RateLimit-Reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            },
            "examples": {
              "InvalidLaunchDate": {
                "summary": "Sample response when the supplied launch date is not acceptable",
                "value": {
                  "traceId": "9834pojfqwp893qoi4jfkl",
                  "error": {
                    "code": "InvalidLaunchDate",
                    "message": "Catalog cannot add products with launch date more than 1 year in the future"
                  }
                }
              },
              "InvalidInputs": {
                "summary": "There are multiple input errors",
                "value": {
                  "traceId": "9834pojfqwp893qoi4jfkl",
                  "error": {
                    "code": "InvalidInputs",
                    "message": "Invalid product information",
                    "details": [
                      {
                        "code": "NullValue",
                        "target": "productName",
                        "message": "must not be null or empty"
                      },
                      {
                        "code": "InvalidDate",
                        "target": "launchDate",
                        "message": "date must be valid ISO format"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "BadRequest": {
        "description": "Bad Request",
        "headers": {
          "Access-Control-Allow-Origin": {
            "$ref": "#/components/headers/Access-Control-Allow-Origin"
          },
          "X-RateLimit-Limit": {
            "$ref": "#/components/headers/X-RateLimit-Limit"
          },
          "X-RateLimit-Remaining": {
            "$ref": "#/components/headers/X-RateLimit-Remaining"
          },
          "X-RateLimit-Reset": {
            "$ref": "#/components/headers/X-RateLimit-Reset"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorResponse"
            }
          }
        }
      }
    },
    "schemas": {
      "Sort": {
        "type": "string",
        "maxLength": 255,
        "pattern": "^([+-][a-zA-Z0-9]+)(,[+-][a-zA-Z0-9]+)*$",
        "example": "+productCd"
      },
      "FIQL": {
        "type": "string",
        "pattern": "^([a-zA-Z0-9]+(==|=ne=|=lt=|=le=|=gt=|=ge=)(\\d{4}-\\d{2}-\\d{2}|'\\d{4}-\\d{2}-\\d{2}'|'[a-zA-Z0-9]+'|[a-zA-Z0-9]+))(;[a-zA-Z0-9]+(==|=ne=|=lt=|=le=|=gt=|=ge=)(\\d{4}-\\d{2}-\\d{2}|'\\d{4}-\\d{2}-\\d{2}'|'[a-zA-Z0-9]+'|[a-zA-Z0-9]+))*$",
        "maxLength": 255,
        "example": "launchDate=ge=2024-01-01;productCode==Remington4907"
      },
      "Product": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 1008
          },
          "productName": {
            "type": "string",
            "maxLength": 30,
            "example": "Dustin electric shaver S-500"
          },
          "productDescription": {
            "type": "string",
            "maxLength": 100,
            "example": "10k rpm, close shaver, 24 hours battery"
          },
          "productCategory": {
            "type": "array",
            "items": {
              "type": "string",
              "maxLength": 255
            },
            "maxItems": 3,
            "example": [
              "Electronics"
            ]
          },
          "launchDate": {
            "type": "string",
            "format": "date",
            "maxLength": 10,
            "example": "2020-12-14"
          }
        },
        "example": {
          "productId": 1095,
          "productName": "Electric Shaver",
          "productDescription": "10k rotor",
          "productCategory": [
            "electronics",
            "personal care"
          ]
        }
      },
      "Token": {
        "type": "object",
        "properties": {
          "access_token": {
            "description": "The jwt formatted tokent to be used for API invocation",
            "type": "string",
            "maxLength": 255
          },
          "expires_in": {
            "description": "expiration of token in seconds, since it was minted",
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 2147483647,
            "example": 3600
          },
          "token_type": {
            "type": "string",
            "maxLength": 255,
            "description": "Only Bearer tokens",
            "example": "Bearer"
          }
        }
      },
      "ProductSearchResult": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "result limited to first 500 rows only",
                "maxLength": 255
              },
              "resultset": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 2147483647,
                    "example": 500
                  },
                  "offset": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 1,
                    "maximum": 92233720336854780000,
                    "example": 150
                  },
                  "limit": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "maximum": 2147483647,
                    "example": 150
                  }
                }
              }
            }
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            },
            "maxItems": 2147483647
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "maxLength": 36,
            "example": "afpjs-829374-askdfllnc"
          },
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "A short code associated with the error or a set of related errors",
                "example": "NullValue",
                "maxLength": 255
              },
              "message": {
                "type": "string",
                "description": "a description with specifics on the error encountered",
                "maxLength": 255
              }
            }
          },
          "details": {
            "type": "array",
            "maxItems": 2147483647,
            "items": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "A short code associated with the error or a set of related errors",
                  "example": "invalidValue",
                  "maxLength": 255
                },
                "target": {
                  "type": "string",
                  "description": "The target attribute that this error is specific to",
                  "example": "launchDate",
                  "maxLength": 255
                },
                "message": {
                  "type": "string",
                  "description": "a description with specifics on the error encountered",
                  "example": "product launch date is too far in the future",
                  "maxLength": 255
                }
              }
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2020-12-14T01:14:44.15Z",
            "maxLength": 30
          }
        }
      }
    },
    "securitySchemes": {
      "ProductAuth": {
        "type": "oauth2",
        "description": "RFC8725 is supported",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://myauthorizationserver.com/authorize",
            "refreshUrl": "/authorize",
            "scopes": {
              "catalog/update": "Add or update items in the product catalog",
              "catalog/read": "Get details of the items in the product catalog"
            }
          }
        }
      },
      "ProductTokenAuth": {
        "type": "oauth2",
        "description": "RFC8725 is supported",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "/token",
            "refreshUrl": "/token?refresh",
            "scopes": {
              "catalog/update": "Add or update items in the product catalog",
              "catalog/read": "Get details of the items in the product catalog"
            }
          }
        }
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "name": "X-API-KEY",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    },
    {
      "ProductTokenAuth": []
    },
    {
      "ProductAuth": []
    }
  ]
}