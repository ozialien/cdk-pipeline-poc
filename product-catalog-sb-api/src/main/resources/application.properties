## Causes Lambda to initialization fail
# spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
#spring.profiles.active=notsecure
spring.application.name=product-catalog-sb-api
datasource_secret_id=
datasource.db-schema-name=products
xray.tracing.enabled=false
##
# Used if the lambda itself is doign the security rather
# than api gateway
# 
app.security.oauth2.enabled=true
    # # OAuth2 Client Registration
    # spring.security.oauth2.client.registration.cognito.provider=cognito-provider
    # spring.security.oauth2.client.registration.cognito.client-id=erSBDemo
    # spring.security.oauth2.client.registration.cognito.client-secret=opensesami
    # spring.security.oauth2.client.registration.cognito.scope=openid,profile,email
    # spring.security.oauth2.client.registration.cognito.authorization-grant-type=password
    # spring.security.oauth2.client.registration.cognito.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
    # # OAuth2 Provider Configuration
    # spring.security.oauth2.client.provider.cognito-provider.authorization-uri=https://auth-server.comdemo-oauth2.auth.us-west-2.amazoncognito.com/oauth/authorize
    # spring.security.oauth2.client.provider.cognito-provider.token-uri=https://demo-oauth2.auth.us-west-2.amazoncognito.com/oauth/token
    # spring.security.oauth2.client.provider.cognito-provider.user-info-uri=https://demo-oauth2.auth.us-west-2.amazoncognito.com/userinfo
    # ##
    # # Apparently not needed anymore
    # #
    # # spring.security.oauth2.client.provider.cognito.issuer-uri=https://demo-oauth2.auth.us-west-2.amazoncognito.com
    # # spring.security.oauth2.client.provider.cognito.authorization-uri=https://demo-oauth2.auth.us-west-2.amazoncognito.com/oauth2/authorize
